﻿@model Tabang_Hub.Utils.Lists

@{
    ViewBag.Title = "OrgProfile";
    Layout = "~/Views/Shared/_Organization.cshtml";
}

<div class="container py-4">
    <form id="editOrgProfileForm" enctype="multipart/form-data">
        <div class="card mb-4">
            <!-- Cover Photo -->
            <div id="coverPhotoContainer" class="position-relative">
                <img src="@(!string.IsNullOrEmpty(Model.OrgInfo.coverPhoto) ? Url.Content(Model.OrgInfo.coverPhoto) : "https://via.placeholder.com/1500x400")"
                     class="card-img-top" alt="Cover Image" id="coverPhoto" style="height: 400px; object-fit: cover;">
                <button type="button" class="btn btn-primary position-absolute top-50 start-50 translate-middle d-none"
                        id="changeCoverButton" onclick="document.getElementById('coverPhotoInput').click()">
                    Change Cover Photo
                </button>
                <input type="file" id="coverPhotoInput" name="coverPhoto" class="form-control d-none"
                       onchange="previewImage('coverPhotoInput', 'coverPhoto')">
            </div>

            <!-- Profile and Details -->
            <div class="card-body d-flex flex-column flex-md-row align-items-center">
                <div id="profilePicContainer" class="text-center mb-3 mb-md-0 me-md-4">
                    @if (Model.OrgInfo.profilePath != null)
                    {
                        <img src="@Url.Content(Model.OrgInfo.profilePath)"
                             class="rounded-circle border border-light mb-2"
                             alt="Profile Image" id="profilePic"
                             style="width: 150px; height: 150px;">
                    }
                    else
                    {
                        <img src="@Url.Content("~/Images/default-profile.png")"
                             class="rounded-circle border border-light mb-2"
                             alt="Profile Image" id="profilePic"
                             style="width: 150px; height: 150px;">
                    }

                    <button type="button" class="btn btn-link d-none"
                            id="changeProfileButton" onclick="document.getElementById('profilePicInput').click()">
                        Change Profile Picture
                    </button>
                    <input type="file" id="profilePicInput" name="profilePic" class="form-control d-none"
                           onchange="previewImage('profilePicInput', 'profilePic')">
                </div>

                <div class="flex-fill">
                    <h4 class="card-title mb-1" id="orgNameDisplay">@Model.OrgInfo.orgName</h4>
                    <input type="text" id="orgNameInput" name="orgProfile.OrgInfo.orgName" class="form-control d-none" value="@Model.OrgInfo.orgName">

                    <p class="text-muted mb-1" id="orgEmailDisplay">@Model.OrgInfo.orgEmail</p>
                    <input type="email" id="orgEmailInput" name="orgProfile.OrgInfo.orgEmail" class="form-control d-none" value="@Model.OrgInfo.orgEmail">
                </div>

                <div class="mt-3 mt-md-0">
                    <button type="button" class="btn btn-primary me-2" id="editButton" onclick="toggleEditMode()">Edit</button>
                    <button type="button" class="btn btn-success d-none" id="saveButton" onclick="submitForm()">Save</button>
                    <button type="button" class="btn btn-secondary d-none" id="cancelButton" onclick="cancelChanges()">Cancel</button>
                </div>
            </div>
        </div>

        <!-- About Me Section -->
        <div class="card shadow-sm border-0 mb-4">
            <div class="card-body">
                <h5 class="card-title text-primary mb-3">About Me</h5>

                <div class="row g-4">
                    <div class="col-md-6">
                        <p><i class="fas fa-phone text-secondary me-2"></i><strong>Phone:</strong> @Model.OrgInfo.phoneNum</p>
                        <input type="text" id="phoneInput" name="orgProfile.OrgInfo.phoneNum" class="form-control d-none" value="@Model.OrgInfo.phoneNum">

                        <p><i class="fas fa-map-marker-alt text-secondary me-2"></i><strong>Street:</strong> @Model.OrgInfo.street</p>
                        <input type="text" id="streetInput" name="orgProfile.OrgInfo.street" class="form-control d-none" value="@Model.OrgInfo.street">
                    </div>

                    <div class="col-md-6">
                        <p><i class="fas fa-city text-secondary me-2"></i><strong>City:</strong> @Model.OrgInfo.city</p>
                        <input type="text" id="cityInput" name="orgProfile.OrgInfo.city" class="form-control d-none" value="@Model.OrgInfo.city">

                        <p><i class="fas fa-location-arrow text-secondary me-2"></i><strong>Province:</strong> @Model.OrgInfo.province</p>
                        <input type="text" id="provinceInput" name="orgProfile.OrgInfo.province" class="form-control d-none" value="@Model.OrgInfo.province">
                    </div>
                </div>

                <h5 class="card-title text-primary mt-4">Description</h5>
                <p class="text-muted" id="descriptionDisplay">@Model.OrgInfo.orgDescription</p>
                <textarea id="descriptionInput" name="orgProfile.OrgInfo.orgDescription" class="form-control d-none">@Model.OrgInfo.orgDescription</textarea>
            </div>
        </div>
    </form>
</div>

<script>
    function toggleEditMode() {
        document.getElementById("editButton").classList.add("d-none");
        document.getElementById("saveButton").classList.remove("d-none");
        document.getElementById("cancelButton").classList.remove("d-none");

        // Enable input fields except the email
        const inputs = ["orgNameInput", "phoneInput", "streetInput", "cityInput", "provinceInput", "descriptionInput"];
        inputs.forEach(id => document.getElementById(id).classList.remove("d-none"));

        // Hide display elements
        const displays = ["orgNameDisplay", "phoneDisplay", "streetDisplay", "cityDisplay", "provinceDisplay", "descriptionDisplay"];
        displays.forEach(id => document.getElementById(id)?.classList.add("d-none"));

        // Enable file uploads
        document.getElementById("changeCoverButton").classList.remove("d-none");
        document.getElementById("changeProfileButton").classList.remove("d-none");
    }

    function cancelChanges() {
        // Reset form and toggle back
        document.getElementById("editOrgProfileForm").reset();

        document.getElementById("editButton").classList.remove("d-none");
        document.getElementById("saveButton").classList.add("d-none");
        document.getElementById("cancelButton").classList.add("d-none");

        // Disable input fields
        const inputs = ["orgNameInput", "phoneInput", "streetInput", "cityInput", "provinceInput", "descriptionInput"];
        inputs.forEach(id => document.getElementById(id).classList.add("d-none"));

        // Show display elements
        const displays = ["orgNameDisplay", "phoneDisplay", "streetDisplay", "cityDisplay", "provinceDisplay", "descriptionDisplay"];
        displays.forEach(id => document.getElementById(id)?.classList.remove("d-none"));

        // Hide file upload buttons
        document.getElementById("changeCoverButton").classList.add("d-none");
        document.getElementById("changeProfileButton").classList.add("d-none");
    }

    function previewImage(inputId, imgId) {
        const fileInput = document.getElementById(inputId);
        const img = document.getElementById(imgId);
        if (fileInput.files && fileInput.files[0]) {
            const reader = new FileReader();
            reader.onload = (e) => img.src = e.target.result;
            reader.readAsDataURL(fileInput.files[0]);
        }
    }

    function submitForm() {
        const formData = new FormData(document.getElementById("editOrgProfileForm"));

        fetch('/Organization/EditOrg', {
            method: 'POST',
            body: formData,
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert("Profile updated successfully!");
                    window.location.reload();
                } else {
                    alert("Error updating profile.");
                }
            })
            .catch(error => console.error('Error:', error));
    }
</script>