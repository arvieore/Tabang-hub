@model Tabang_Hub.Utils.Lists

@{
    ViewBag.Title = "PaymentHistory";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    body {
        padding-top: 125px;
    }
</style>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
<link href="~/Content/Css/donationHistory.css" rel="stylesheet" />
<body>
    <div class="container">
        <h1>Your Donation History</h1>
        <div class="controls">
            <div class="filter-sort">
                <input type="text" id="refNumberSearch" class="search-input" placeholder="Search Ref Number" aria-label="Search by reference number">
                <select id="typeFilter" aria-label="Filter by donation type">
                    <option value="all">All Types</option>
                    <option value="Money">Money</option>
                    <option value="Item">Item</option>
                    <option value="Money + Item">Money + Item</option>
                </select>
                <select id="sortBy" aria-label="Sort donations">
                    <option value="date">Sort by Date</option>
                    <option value="amount">Sort by Amount</option>
                    <option value="event">Sort by Event</option>
                </select>
            </div>
            <div class="total-donation">
                Total Donation: <span id="totalAmount">0</span>
            </div>
        </div>
        <table id="donationTable">
            <thead>
                <tr>
                    <th>Ref Number</th>
                    <th>Date Donated</th>
                    <th>Type</th>
                    <th>Amount/Description</th>
                    <th>Event Name</th>
                    <th>More Info</th>
                </tr>
            </thead>
            <tbody>
                <!-- Table body will be populated by JavaScript -->
            </tbody>
        </table>
    </div>

    <div id="popup" class="popup" aria-modal="true" role="dialog">
        <button class="popup-close" aria-label="Close">&times;</button>
        <img id="popupImage" src="" alt="" class="popup-image">
        <h4 id="popupTitle"></h4>
        <div id="popupContent"></div>
    </div>

    <div id="overlay" class="overlay"></div>

    <script>
        const table = document.getElementById('donationTable');
        const popup = document.getElementById('popup');
        const overlay = document.getElementById('overlay');
        const popupTitle = document.getElementById('popupTitle');
        const popupContent = document.getElementById('popupContent');
        const popupImage = document.getElementById('popupImage');
        const popupClose = document.querySelector('.popup-close');
        const typeFilter = document.getElementById('typeFilter');
        const sortBy = document.getElementById('sortBy');
        const totalAmountSpan = document.getElementById('totalAmount');
        const refNumberSearch = document.getElementById('refNumberSearch');

        const donationData = @Html.Raw(Json.Encode(Model.sp_GetUserDonated));

        //const donationData = [
        //    {
        //        refNumber: 'DON001',
        //        date: '2023-05-15',
        //        type: 'Money',
        //        amount: 100.00,
        //        description: '$100.00',
        //        event: 'Annual Fundraiser',
        //        image: '/placeholder.svg?height=200&width=300',
        //        additionalInfo: 'Generous monetary donation to support our cause.'
        //    },
        //    {
        //        refNumber: 'DON002',
        //        date: '2023-05-14',
        //        type: 'Item',
        //        amount: 0,
        //        description: '5 boxes of canned food',
        //        event: 'Food Drive',
        //        image: '/placeholder.svg?height=200&width=300',
        //        additionalInfo: 'Donation of non-perishable food items for our food bank.'
        //    },
        //    {
        //        refNumber: 'DON003',
        //        date: '2023-05-13',
        //        type: 'Item + Money',
        //        amount: 50.00,
        //        description: '20 winter coats + $50.00',
        //        event: 'Winter Warmth Campaign',
        //        image: '/placeholder.svg?height=200&width=300',
        //        additionalInfo: 'Warm winter coats for those in need during cold months, along with a monetary contribution.'
        //    },
        //    {
        //        refNumber: 'DON004',
        //        date: '2023-05-12',
        //        type: 'Money',
        //        amount: 50.00,
        //        description: '$50.00',
        //        event: 'Emergency Relief Fund',
        //        image: '/placeholder.svg?height=200&width=300',
        //        additionalInfo: 'Monetary contribution to help fund our ongoing projects.'
        //    },
        //    {
        //        refNumber: 'DON005',
        //        date: '2023-05-11',
        //        type: 'Item + Money',
        //        amount: 25.00,
        //        description: '3 boxes of children\'s books + $25.00',
        //        event: 'Literacy Boost Initiative',
        //        image: '/placeholder.svg?height=200&width=300',
        //        additionalInfo: 'Educational materials to support children\'s literacy programs, along with a monetary donation.'
        //    }
        //];

        function updateTable() {
            const tbody = table.querySelector('tbody');
            tbody.innerHTML = '';
            let filteredData = donationData;

            const searchTerm = refNumberSearch.value.toLowerCase();
            if (searchTerm) {
                filteredData = filteredData.filter(donation => donation.RefNumber.toLowerCase().includes(searchTerm));
            }

            if (typeFilter.value !== 'all') {
                filteredData = filteredData.filter(donation => donation.Type === typeFilter.value);
            }

            if (sortBy.value === 'date') {
                filteredData.sort((a, b) => new Date(parseDateForSort(b.DateDonated)) - new Date(parseDateForSort(a.DateDonated)));
            } else if (sortBy.value === 'amount') {
                filteredData.sort((a, b) => extractAmount(b.AmountOrDescription) - extractAmount(a.AmountOrDescription));
            } else if (sortBy.value === 'event') {
                filteredData.sort((a, b) => a.EventName.localeCompare(b.EventName));
            }

            filteredData.forEach(donation => {
                const row = document.createElement('tr');
                row.innerHTML = `
                        <td data-label="Ref Number">${donation.RefNumber}</td>
                        <td data-label="Date Donated">${formatDate(donation.DateDonated)}</td>
                        <td data-label="Type" class="${donation.Type.toLowerCase().includes('money') ? 'money' : 'item'}">${donation.Type}</td>
                        <td data-label="Amount/Description">${donation.AmountOrDescription}</td>
                        <td data-label="Event Name">${donation.EventName}</td>
                        <td data-label="More Info"><i class="fas fa-info-circle info-icon" aria-label="View more information"></i></td>
                    `;
                tbody.appendChild(row);
            });

            updateTotalAmount(filteredData);
        }
        function formatDate(netDate) {
            const timestamp = parseInt(netDate.replace(/\/Date\((\d+)\)\//, '$1'));
            const date = new Date(timestamp);
            const options = { year: 'numeric', month: 'long', day: 'numeric' };
            return date.toLocaleDateString('en-US', options); // Formats as "December 24, 2024"
        }
        function parseDateForSort(netDate) {
            const timestamp = parseInt(netDate.replace(/\/Date\((\d+)\)\//, '$1'));
            return new Date(timestamp); // Returns a JavaScript Date object
        }
        function extractAmount(description) {
            // Match any number after a peso sign (₱) or at the start of the string
            const matches = description.match(/₱?(\d+(\.\d+)?)/g);
            if (!matches) return 0;

            // Sum up all matched numeric values
            return matches.reduce((sum, value) => sum + parseFloat(value.replace('₱', '')), 0);
        }


        function updateTotalAmount(filteredData) {
            const total = calculateTotalDonation(filteredData);
            totalAmountSpan.textContent = `₱${total.toFixed(2)}`;
        }

        // Helper function to calculate the total donation amount
        function calculateTotalDonation(data) {
            return data.reduce((sum, donation) => {
                const amount = extractAmount(donation.AmountOrDescription);
                return sum + amount;
            }, 0);
        }

        typeFilter.addEventListener('change', updateTable);
        sortBy.addEventListener('change', updateTable);
        refNumberSearch.addEventListener('input', updateTable);

        table.addEventListener('click', (e) => {
            if (e.target.classList.contains('info-icon')) {
                const row = e.target.closest('tr');
                const RefNumber = row.cells[0].textContent;
                const donation = donationData.find(d => d.RefNumber === RefNumber);

                if (donation) {
                    popupTitle.textContent = `${donation.EventName}`;
                    popupImage.src = "/Content/Events/" + donation.EventImage;
                    popupImage.alt = `Image for ${donation.EventName}`;
                    popupContent.innerHTML = `
                            <p><strong>Date Donated:</strong> ${formatDate(donation.DateDonated) }</p>
                            <p><strong>Type:</strong> ${donation.Type}</p>
                            <p><strong>Amount/Description:</strong> ${donation.AmountOrDescription}</p>
                            <p><strong>Event description:</strong> ${donation.DonationDescription || donation.EventDescription}</p>
                        `;

                    popup.style.display = 'block';
                    overlay.style.display = 'block';
                    popup.focus();
                }
            }
        });

        popupClose.addEventListener('click', closePopup);
        overlay.addEventListener('click', closePopup);

        function closePopup() {
            popup.style.display = 'none';
            overlay.style.display = 'none';
        }

        document.addEventListener('keydown', (e) => {
            if (e.key === 'Escape' && popup.style.display === 'block') {
                closePopup();
            }
        });

        updateTable();
    </script>
</body>